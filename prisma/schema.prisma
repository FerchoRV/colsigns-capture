generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model levels {
  id         BigInt       @id @default(autoincrement())
  name       String       @unique
  users_data users_data[]
  videos     videos[]
}

model roles {
  id    BigInt  @id @default(autoincrement())
  name  String  @unique
  users users[]
}

model sign_name {
  id                 BigInt    @id @default(autoincrement())
  name               String    @unique
  video_example_path String
  type_id            BigInt
  type_sign          type_sign @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  videos             videos[]
}

model type_sign {
  id        BigInt      @id(map: "type_sing_pkey") @default(autoincrement())
  name      String      @unique(map: "type_sing_name_key")
  sign_name sign_name[]
}

model users {
  id         BigInt       @id @default(autoincrement())
  username   String       @unique
  password   String
  role_id    BigInt
  roles      roles        @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_data users_data[]
  videos     videos[]
}

model users_data {
  id         BigInt @id @default(autoincrement())
  user_id    BigInt
  first_name String
  last_name  String
  level_id   BigInt
  levels     levels @relation(fields: [level_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model videos {
  id         BigInt    @id @default(autoincrement())
  user_id    BigInt
  video_path String
  level_id   BigInt
  sign_id    BigInt
  levels     levels    @relation(fields: [level_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sign_name  sign_name @relation(fields: [sign_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
